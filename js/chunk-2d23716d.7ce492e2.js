(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d23716d"],{fa40:function(s,t,a){"use strict";a.r(t);var r=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},e=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h1",[s._v("Github Actions入门")]),a("p",[s._v("该笔记主要基于阮一峰老师的《"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html"}},[s._v("GitHub Actions 入门教程")]),s._v("》,阮一峰老师在这篇文章中简要对Github Actions概念做了介绍，并以一个实际应用为例，十分浅显易懂。本文章中首先对其内容做一些搬运，而后对如何自动部署静态网站做一些补充。")]),a("h2",[s._v("是什么，能做什么")]),a("p",[s._v("Github Actions的"),a("a",{attrs:{href:"https://help.github.com/en/actions"}},[s._v("官方文档")]),s._v("对其介绍为：")]),a("blockquote",[a("p",[s._v("Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you'd like, including CI/CD, and combine actions in a completely customized workflow.")])]),a("p",[s._v("以我个人粗浅的理解，Github Actions首先让一些本来需要手工进行的软件开发流程通过触发器以自动化的方式执行，从而方便了软件开发。例如以Github Pages为例，假设使用了React、Vue等开发工具进行静态网页开发，那么在完成项目的代码编写工作后，需要使用类似 "),a("code",{pre:!0},[s._v("npm run build")]),s._v(" 的指令进行目标静态网页生成，并手动将其部署到Github Pages对应的github仓库中。这个部署到仓库中的最后一步是完全可以自动化运行的，即：每次执行push操作后，就自动生成静态网页资源并部署到github仓库中。")]),a("p",[s._v("当然，如果仅仅只是自动化部署，那么有一些现有的技术也可以做到，例如 Travis CI。Github Actions更重要思想是，像部署这样的很多工作在不同的具体应用之上是大体相同的，在一个以vue开发的静态网页部署中是这样进行，在另一个静态网页部署应用中也应当是这样进行，即actions是可以重用的。")]),a("p",[s._v("说的很多，可能没有说清楚，还是看看阮一峰老师是怎么说的：")]),a("blockquote",[a("p",[s._v("大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。")]),a("p",[s._v("很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。")]),a("p",[s._v("如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。")])]),a("p",[s._v("因此，在需要进行相应的自动化软件开发流程时，多数情况下并不需要每个软件都手动编写actions，只需要在github或第三方提供的市场中寻找并引入到自己的workflow中就可以，大大提高了效率。")]),a("h2",[s._v("如何使用")]),a("h3",[s._v("基本概念")]),a("p",[s._v("GitHub Actions 有一些自己的术语。")]),a("ol",[a("li",[a("p",[s._v("workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。")])]),a("li",[a("p",[s._v("job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。")])]),a("li",[a("p",[s._v("step（步骤）：每个 job 由多个 step 构成，一步步完成。")])]),a("li",[a("p",[s._v("action （动作）：每个 step 可以依次执行一个或多个命令（action）。")])])]),a("h3",[s._v("结构总览")]),a("p",[s._v("GitHub Actions 的配置文件叫做 workflow 文件，是YAML格式。其存放在代码仓库的.github/workflows目录中。Github会自动地检查该目录并自动运行其中的workflow文件。")]),a("p",[s._v("workflow 文件的配置字段非常多，详见"),a("a",{attrs:{href:"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions"}},[s._v("官方文档")]),s._v("。下面是一些基本字段。")]),a("h4",[a("code",{pre:!0},[s._v("name")])]),a("p",[a("code",{pre:!0},[s._v("name")]),s._v("字段是workflow的名称。如果省略该字段，默认为当前workflow的文件名。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("GitHub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Actions")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Demo")]),s._v("\n")])]),a("h4",[a("code",{pre:!0},[s._v("on")])]),a("p",[a("code",{pre:!0},[s._v("on")]),s._v("字段指定触发workflow的条件。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("on:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("push")]),s._v("\n")])]),a("p",[s._v("也可以为"),a("code",{pre:!0},[s._v("on")]),s._v("字段指定一个数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("on:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("[push,")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("pull_request]")]),s._v("\n")])]),a("p",[s._v("如果需要额外配置事件的激活类型，则需要分别配置每个事件；同时为每个事件末尾加上冒号"),a("code",{pre:!0},[s._v(":")]),s._v("。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("on:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Trigger the workflow on push or pull request,")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# but only for the master branch")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("push:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("branches:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("master")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("pull_request:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("branches:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("master")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Also trigger on page_build, as well as release created events")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("page_build:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("release:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("types:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# This configuration does not affect the page_build event above")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("created")]),s._v("\n")])]),a("h4",[a("code",{pre:!0},[s._v("jobs.<job_id>")])]),a("p",[s._v("workflow运行由一个或多个jobs组成。 默认情况下，jobs并行运行。可以通过"),a("code",{pre:!0},[s._v("jobs.<job_id>.needs")]),s._v("指定jobs串行执行。")]),a("p",[s._v("每个job必须有一个独一无二的id。这个id是字符串，由workflow文件中的job的配置文件经过映射构成。因此，需要为每个job指定不同的字符串作为"),a("code",{pre:!0},[s._v("<job_id>")]),s._v("，字符串必须以字母开头，由字母数字和下划线构成。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("jobs:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("my_first_job:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("My")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("first")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("job")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("my_second_job:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("My")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("second")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("job")]),s._v("\n")])]),a("h4",[a("code",{pre:!0},[s._v("jobs.<job_id>.name")])]),a("p",[a("code",{pre:!0},[s._v("jobs.<job_id>.name")]),s._v("字段是job在Github中显示出来的名字。")]),a("h4",[a("code",{pre:!0},[s._v("jobs.<job_id>.runs-on")])]),a("p",[a("code",{pre:!0},[s._v("jobs.<job_id>.runs-on")]),s._v("字段指定运行所需要的虚拟机环境。它是必填字段。可用的虚拟机环境有Windows、Ubuntu和MacOS。可以通过"),a("code",{pre:!0},[s._v("x-y")]),s._v("的方式指定，其中"),a("code",{pre:!0},[s._v("x")]),s._v("是系统，"),a("code",{pre:!0},[s._v("y")]),s._v("是版本，例如"),a("code",{pre:!0},[s._v("ubuntu-latest")]),s._v("指定了最新的ubuntu系统。")]),a("h4",[a("code",{pre:!0},[s._v("jobs.<job_id>.step")])]),a("p",[a("code",{pre:!0},[s._v("steps")]),s._v("字段指定每个job的运行步骤，可以包含一个或多个步骤。其中，一些基础字段及其含义如下所示，更多字段可详见官方文档。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("steps:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# A name for the step.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("greeting")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# A map of environment variables")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Variables are available to all steps in the job.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("env:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("MY_VAR:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Hi")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("there!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("My")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("name")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("is")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("FIRST_NAME:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Mona")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("MIDDLE_NAME:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("The")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("LAST_NAME:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Octocat")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Runs command-line programs")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("run:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("|\n      echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.\n")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("another")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("greeting")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Selects an action to run")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uses:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("actions/hello_world@master")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# A map of the input parameters defined by the action")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("with:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("first_name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Mona")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("middle_name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("The")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("last_name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Octocat")]),s._v("\n")])]),a("h3",[s._v("Github Pages部署实例")]),a("p",[s._v("接下来将以自动部署Vue应用到Github Pages为例，展示Github Actions的实际运用。")]),a("p",[s._v("首先是workflow文件，如下所示。该文件参考了一个现成的action："),a("a",{attrs:{href:"https://github.com/marketplace/actions/deploy-to-github-pages"}},[s._v("Deploy to GitHub Pages")]),s._v("，在该workflow中使用的也正是这个action。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Build")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Deploy")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("on:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("push:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("branches:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("master")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("jobs:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("build-and-deploy:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("runs-on:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("ubuntu-latest")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("steps:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Checkout")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("🛎️")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uses:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("actions/checkout@v2")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("with:")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("persist-credentials:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Build")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("🔧")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("run:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("|\n          npm install\n          npm run build\n")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Deploy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("🚀")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("uses:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("JamesIves/github-pages-deploy-action@releases/v3")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("with:")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("ACCESS_TOKEN:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("${{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("secrets.ACCESS_TOKEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("}}")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("REPOSITORY_NAME:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("rmdyh/rmdyh.github.io")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("BRANCH:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("master")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("FOLDER:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("dist")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("CLEAN:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("COMMIT_MESSAGE:")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("${{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("github.event.commits[0].message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("}}")]),s._v("\n")])]),a("p",[s._v("该workflow含有一个job，即"),a("code",{pre:!0},[s._v("build-and-deploy")]),s._v("。这个job共分为三步：")]),a("ol",[a("li",[s._v("检查")]),a("li",[s._v("安装依赖并生成静态网页")]),a("li",[s._v("部署到github仓库")])]),a("p",[s._v("前两步就不多说，这里主要解释第三步中的一些参数字段。他们从上到下分别为Github密钥、将文件推送到的目的仓库名、仓库分支、静态网页所在目录、是否清空仓库、提交信息。")]),a("p",[s._v("其中，Github密钥为按照"),a("a",{attrs:{href:"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line"}},[s._v("官方文档")]),s._v("，生成一个密钥。将其储存到Vue仓库中的Settings/Secrets中并以"),a("code",{pre:!0},[s._v("ACCESS_TOKEN")]),s._v("命名，就可以在workflow中获取它，从而获得向仓库推送内容的权限。")]),a("p",[s._v("由于Vue命名静态网页文件采用hash的方式，因此在每次推送新的内容前，需要将旧内容清除，即设置"),a("code",{pre:!0},[s._v("CLEAN")]),s._v("参数为"),a("code",{pre:!0},[s._v("true")]),s._v("。")]),a("p",[s._v("通过传入"),a("code",{pre:!0},[s._v("COMMIT_MESSAGE")]),s._v("参数，可以自定义commit的信息。这里通过"),a("code",{pre:!0},[s._v("github.event.commits[0].message")]),s._v("获取了本次push中第一个commit中的信息，作为自动部署commit的信息进行推送。"),a("code",{pre:!0},[s._v("${{ github }}")]),s._v("和"),a("code",{pre:!0},[s._v("${{ secrets.ACCESS_TOKEN }}")]),s._v("都是上下文信息（context），所有上下文信息可以在"),a("a",{attrs:{href:"https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions"}},[s._v("这里")]),s._v("找到。")]),a("p",[s._v("通过在Vue工程中放入该workflow，每次进行push操作后，github都将自动build该工程并将得到的文件推送到"),a("code",{pre:!0},[s._v("rmdyh/rmdyh.github.io")]),s._v("仓库的"),a("code",{pre:!0},[s._v("master")]),s._v("分支，从而实现了Github Page的自动部署。")])])}],n=a("2877"),p={},l=Object(n["a"])(p,r,e,!1,null,null,null);t["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d23716d.7ce492e2.js.map